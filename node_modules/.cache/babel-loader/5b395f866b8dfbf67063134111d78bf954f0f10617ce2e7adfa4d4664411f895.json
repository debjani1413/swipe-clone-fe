{"ast":null,"code":"var _jsxFileName = \"/Users/debjani1413/swipe-clone/frontend/src/components/table.js\";\nimport React from 'react';\nimport \"../styles/table.css\";\n\n// const Table = ({ tabledata }) => {\n\n//   useEffect(()=>{\n//     console.log(\"Reacieved:\",tabledata)\n//   },[tabledata])\n//   return (\n//     <div className=\"table-container\">\n//       <table className=\"styled-table\">\n//         <thead>\n//           <tr>\n//             <th>Serial Number</th>\n//             <th>Customer Name</th>\n//             <th>Product Name</th>\n//             <th>Qty</th>\n//             <th>Tax</th>\n//             <th>Amount</th>\n//             <th>Total Amount</th>\n//             <th>Date</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tabledata?.map((row, index) => (\n//             <tr key={index}>\n//               <td>{index}</td>\n//               <td>{row.CustomerName}</td>\n//               <td>{row.ProductName}</td>\n//               <td>{row.Quantity}</td>\n//               <td>{row.Tax}</td>\n//               <td>{row.TotalAmount}</td>\n//               <td>{row.AmountPayable}</td>\n//               <td>{row.Date}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   )\n// }\n\n// export default Table;\n\n// const Table = ({ tabledata, columns }) => {\n//   return (\n//     <div className=\"table-container\">\n//     <table className=\"styled-table\"> \n//       <thead>\n//         <tr>\n//           {columns.map((col) => (\n//             <th key={col.key}>{col.label}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {tabledata.map((row, index) => (\n//           <tr key={index} className={row.isMissing ? \"highlight-row\" : \"\"}>\n//             {columns.map((col) => (\n//               <td key={col.key} className={!row[col.key] || row[col.key] === \"Missing\" ? \"missing-field\" : \"\"}>\n//                 {row[col.key]}\n//                 {!row[col.key] && <span className=\"tooltip\">Field is required</span>}\n//                 </td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//     </div>\n//   );\n// };\n\n// export default Table;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  tabledata,\n  columns\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"styled-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col.label\n          }, col.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabledata.map((row, index) => {\n          const isRowMissing = columns.some(col => !row[col.key]); // Check if any column value is missing\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: isRowMissing ? \"highlight-row\" : \"\",\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: !row[col.key] ? \"missing-field\" : \"\",\n              children: row[col.key] || /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tooltip\",\n                children: \"Field is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 38\n              }, this)\n            }, col.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","tabledata","columns","className","children","map","col","label","key","fileName","_jsxFileName","lineNumber","columnNumber","row","index","isRowMissing","some","_c","$RefreshReg$"],"sources":["/Users/debjani1413/swipe-clone/frontend/src/components/table.js"],"sourcesContent":["import React from 'react';\nimport \"../styles/table.css\"\n\n// const Table = ({ tabledata }) => {\n\n//   useEffect(()=>{\n//     console.log(\"Reacieved:\",tabledata)\n//   },[tabledata])\n//   return (\n//     <div className=\"table-container\">\n//       <table className=\"styled-table\">\n//         <thead>\n//           <tr>\n//             <th>Serial Number</th>\n//             <th>Customer Name</th>\n//             <th>Product Name</th>\n//             <th>Qty</th>\n//             <th>Tax</th>\n//             <th>Amount</th>\n//             <th>Total Amount</th>\n//             <th>Date</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tabledata?.map((row, index) => (\n//             <tr key={index}>\n//               <td>{index}</td>\n//               <td>{row.CustomerName}</td>\n//               <td>{row.ProductName}</td>\n//               <td>{row.Quantity}</td>\n//               <td>{row.Tax}</td>\n//               <td>{row.TotalAmount}</td>\n//               <td>{row.AmountPayable}</td>\n//               <td>{row.Date}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   )\n// }\n\n// export default Table;\n\n\n// const Table = ({ tabledata, columns }) => {\n//   return (\n//     <div className=\"table-container\">\n//     <table className=\"styled-table\"> \n//       <thead>\n//         <tr>\n//           {columns.map((col) => (\n//             <th key={col.key}>{col.label}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {tabledata.map((row, index) => (\n//           <tr key={index} className={row.isMissing ? \"highlight-row\" : \"\"}>\n//             {columns.map((col) => (\n//               <td key={col.key} className={!row[col.key] || row[col.key] === \"Missing\" ? \"missing-field\" : \"\"}>\n//                 {row[col.key]}\n//                 {!row[col.key] && <span className=\"tooltip\">Field is required</span>}\n//                 </td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//     </div>\n//   );\n// };\n\n// export default Table;\n\nconst Table = ({ tabledata, columns }) => {\n  return (\n    <div className=\"table-container\">\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            {columns.map((col) => (\n              <th key={col.key}>{col.label}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {tabledata.map((row, index) => {\n            const isRowMissing = columns.some((col) => !row[col.key]); // Check if any column value is missing\n\n            return (\n              <tr key={index} className={isRowMissing ? \"highlight-row\" : \"\"}>\n                {columns.map((col) => (\n                  <td\n                    key={col.key}\n                    className={!row[col.key] ? \"missing-field\" : \"\"}\n                  >\n                    {row[col.key] || <span className=\"tooltip\">Field is required</span>}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EACxC,oBACEH,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BL,OAAA;MAAOI,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC7BL,OAAA;QAAAK,QAAA,eACEL,OAAA;UAAAK,QAAA,EACGF,OAAO,CAACG,GAAG,CAAEC,GAAG,iBACfP,OAAA;YAAAK,QAAA,EAAmBE,GAAG,CAACC;UAAK,GAAnBD,GAAG,CAACE,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiB,CAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRb,OAAA;QAAAK,QAAA,EACGH,SAAS,CAACI,GAAG,CAAC,CAACQ,GAAG,EAAEC,KAAK,KAAK;UAC7B,MAAMC,YAAY,GAAGb,OAAO,CAACc,IAAI,CAAEV,GAAG,IAAK,CAACO,GAAG,CAACP,GAAG,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;;UAE3D,oBACET,OAAA;YAAgBI,SAAS,EAAEY,YAAY,GAAG,eAAe,GAAG,EAAG;YAAAX,QAAA,EAC5DF,OAAO,CAACG,GAAG,CAAEC,GAAG,iBACfP,OAAA;cAEEI,SAAS,EAAE,CAACU,GAAG,CAACP,GAAG,CAACE,GAAG,CAAC,GAAG,eAAe,GAAG,EAAG;cAAAJ,QAAA,EAE/CS,GAAG,CAACP,GAAG,CAACE,GAAG,CAAC,iBAAIT,OAAA;gBAAMI,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAAC;cAAiB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC,GAH9DN,GAAG,CAACE,GAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACL;UAAC,GARKE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASV,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACK,EAAA,GAhCIjB,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}