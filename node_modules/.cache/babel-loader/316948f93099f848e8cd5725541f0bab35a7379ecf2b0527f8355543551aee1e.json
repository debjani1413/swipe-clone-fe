{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocumentProcessorServiceClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/document_processor_service_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./document_processor_service_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service to call Document AI to process documents according to the\n *  processor's definition. Processors are built using state-of-the-art Google\n *  AI such as natural language, computer vision, and translation to extract\n *  structured information from unstructured or semi-structured documents.\n * @class\n * @memberof v1\n */\nclass DocumentProcessorServiceClient {\n  /**\n   * Construct an instance of DocumentProcessorServiceClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new DocumentProcessorServiceClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'documentai.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      evaluationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}'),\n      humanReviewConfigPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/humanReviewConfig'),\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      processorPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}'),\n      processorTypePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processorTypes/{processor_type}'),\n      processorVersionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}'),\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listProcessorTypes: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processorTypes'),\n      listProcessors: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processors'),\n      listProcessorVersions: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processorVersions'),\n      listEvaluations: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'evaluations')\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [{\n        selector: 'google.cloud.location.Locations.GetLocation',\n        get: '/v1/{name=projects/*/locations/*}',\n        additional_bindings: [{\n          get: '/uiv1beta3/{name=projects/*/locations/*}'\n        }]\n      }, {\n        selector: 'google.cloud.location.Locations.ListLocations',\n        get: '/v1/{name=projects/*}/locations',\n        additional_bindings: [{\n          get: '/uiv1beta3/{name=projects/*}/locations'\n        }]\n      }, {\n        selector: 'google.longrunning.Operations.CancelOperation',\n        post: '/v1/{name=projects/*/locations/*/operations/*}:cancel',\n        additional_bindings: [{\n          post: '/uiv1beta3/{name=projects/*/locations/*/operations/*}:cancel'\n        }]\n      }, {\n        selector: 'google.longrunning.Operations.GetOperation',\n        get: '/v1/{name=projects/*/operations/*}',\n        additional_bindings: [{\n          get: '/v1/{name=projects/*/locations/*/operations/*}'\n        }, {\n          get: '/uiv1beta3/{name=projects/*/locations/*/operations/*}'\n        }]\n      }, {\n        selector: 'google.longrunning.Operations.ListOperations',\n        get: '/v1/{name=projects/*/locations/*/operations}',\n        additional_bindings: [{\n          get: '/uiv1beta3/{name=projects/*/locations/*/operations}'\n        }]\n      }];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const batchProcessDocumentsResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.BatchProcessResponse');\n    const batchProcessDocumentsMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.BatchProcessMetadata');\n    const trainProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.TrainProcessorVersionResponse');\n    const trainProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.TrainProcessorVersionMetadata');\n    const deleteProcessorVersionResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n    const deleteProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeleteProcessorVersionMetadata');\n    const deployProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeployProcessorVersionResponse');\n    const deployProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeployProcessorVersionMetadata');\n    const undeployProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.UndeployProcessorVersionResponse');\n    const undeployProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.UndeployProcessorVersionMetadata');\n    const deleteProcessorResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n    const deleteProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeleteProcessorMetadata');\n    const enableProcessorResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.EnableProcessorResponse');\n    const enableProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.EnableProcessorMetadata');\n    const disableProcessorResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.DisableProcessorResponse');\n    const disableProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DisableProcessorMetadata');\n    const setDefaultProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse');\n    const setDefaultProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata');\n    const reviewDocumentResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.ReviewDocumentResponse');\n    const reviewDocumentMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.ReviewDocumentOperationMetadata');\n    const evaluateProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.EvaluateProcessorVersionResponse');\n    const evaluateProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.EvaluateProcessorVersionMetadata');\n    this.descriptors.longrunning = {\n      batchProcessDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, batchProcessDocumentsResponse.decode.bind(batchProcessDocumentsResponse), batchProcessDocumentsMetadata.decode.bind(batchProcessDocumentsMetadata)),\n      trainProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, trainProcessorVersionResponse.decode.bind(trainProcessorVersionResponse), trainProcessorVersionMetadata.decode.bind(trainProcessorVersionMetadata)),\n      deleteProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteProcessorVersionResponse.decode.bind(deleteProcessorVersionResponse), deleteProcessorVersionMetadata.decode.bind(deleteProcessorVersionMetadata)),\n      deployProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deployProcessorVersionResponse.decode.bind(deployProcessorVersionResponse), deployProcessorVersionMetadata.decode.bind(deployProcessorVersionMetadata)),\n      undeployProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeployProcessorVersionResponse.decode.bind(undeployProcessorVersionResponse), undeployProcessorVersionMetadata.decode.bind(undeployProcessorVersionMetadata)),\n      deleteProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteProcessorResponse.decode.bind(deleteProcessorResponse), deleteProcessorMetadata.decode.bind(deleteProcessorMetadata)),\n      enableProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, enableProcessorResponse.decode.bind(enableProcessorResponse), enableProcessorMetadata.decode.bind(enableProcessorMetadata)),\n      disableProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, disableProcessorResponse.decode.bind(disableProcessorResponse), disableProcessorMetadata.decode.bind(disableProcessorMetadata)),\n      setDefaultProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, setDefaultProcessorVersionResponse.decode.bind(setDefaultProcessorVersionResponse), setDefaultProcessorVersionMetadata.decode.bind(setDefaultProcessorVersionMetadata)),\n      reviewDocument: new this._gaxModule.LongrunningDescriptor(this.operationsClient, reviewDocumentResponse.decode.bind(reviewDocumentResponse), reviewDocumentMetadata.decode.bind(reviewDocumentMetadata)),\n      evaluateProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, evaluateProcessorVersionResponse.decode.bind(evaluateProcessorVersionResponse), evaluateProcessorVersionMetadata.decode.bind(evaluateProcessorVersionMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.documentai.v1.DocumentProcessorService', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.documentProcessorServiceStub) {\n      return this.documentProcessorServiceStub;\n    }\n    // Put together the \"service stub\" for\n    // google.cloud.documentai.v1.DocumentProcessorService.\n    this.documentProcessorServiceStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.documentai.v1.DocumentProcessorService') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.documentai.v1.DocumentProcessorService, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const documentProcessorServiceStubMethods = ['processDocument', 'batchProcessDocuments', 'fetchProcessorTypes', 'listProcessorTypes', 'getProcessorType', 'listProcessors', 'getProcessor', 'trainProcessorVersion', 'getProcessorVersion', 'listProcessorVersions', 'deleteProcessorVersion', 'deployProcessorVersion', 'undeployProcessorVersion', 'createProcessor', 'deleteProcessor', 'enableProcessor', 'disableProcessor', 'setDefaultProcessorVersion', 'reviewDocument', 'evaluateProcessorVersion', 'getEvaluation', 'listEvaluations'];\n    for (const methodName of documentProcessorServiceStubMethods) {\n      const callPromise = this.documentProcessorServiceStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.documentProcessorServiceStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'documentai.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'documentai.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  processDocument(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.processDocument(request, options, callback);\n  }\n  fetchProcessorTypes(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.fetchProcessorTypes(request, options, callback);\n  }\n  getProcessorType(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProcessorType(request, options, callback);\n  }\n  getProcessor(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProcessor(request, options, callback);\n  }\n  getProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProcessorVersion(request, options, callback);\n  }\n  createProcessor(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createProcessor(request, options, callback);\n  }\n  getEvaluation(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getEvaluation(request, options, callback);\n  }\n  batchProcessDocuments(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.batchProcessDocuments(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `batchProcessDocuments()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.batch_process_documents.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_BatchProcessDocuments_async\n   */\n  async checkBatchProcessDocumentsProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.batchProcessDocuments, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  trainProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.trainProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `trainProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.train_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_TrainProcessorVersion_async\n   */\n  async checkTrainProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.trainProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deleteProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.delete_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_DeleteProcessorVersion_async\n   */\n  async checkDeleteProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deployProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deployProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deployProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.deploy_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_DeployProcessorVersion_async\n   */\n  async checkDeployProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deployProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  undeployProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.undeployProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `undeployProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.undeploy_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_UndeployProcessorVersion_async\n   */\n  async checkUndeployProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeployProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteProcessor(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProcessor(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deleteProcessor()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.delete_processor.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_DeleteProcessor_async\n   */\n  async checkDeleteProcessorProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteProcessor, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  enableProcessor(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.enableProcessor(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `enableProcessor()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.enable_processor.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_EnableProcessor_async\n   */\n  async checkEnableProcessorProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.enableProcessor, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  disableProcessor(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.disableProcessor(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `disableProcessor()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.disable_processor.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_DisableProcessor_async\n   */\n  async checkDisableProcessorProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.disableProcessor, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  setDefaultProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      processor: (_a = request.processor) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.setDefaultProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `setDefaultProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.set_default_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_SetDefaultProcessorVersion_async\n   */\n  async checkSetDefaultProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.setDefaultProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  reviewDocument(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      human_review_config: (_a = request.humanReviewConfig) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.reviewDocument(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `reviewDocument()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.review_document.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_ReviewDocument_async\n   */\n  async checkReviewDocumentProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.reviewDocument, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  evaluateProcessorVersion(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      processor_version: (_a = request.processorVersion) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.evaluateProcessorVersion(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `evaluateProcessorVersion()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.evaluate_processor_version.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_EvaluateProcessorVersion_async\n   */\n  async checkEvaluateProcessorVersionProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.evaluateProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  listProcessorTypes(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProcessorTypes(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The location of processor types to list.\n   *   Format: `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of processor types to return.\n   *   If unspecified, at most `100` processor types will be returned.\n   *   The maximum value is `500`. Values above `500` will be coerced to `500`.\n   * @param {string} request.pageToken\n   *   Used to retrieve the next page of results, empty if at the end of the list.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.ProcessorType|ProcessorType} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProcessorTypesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProcessorTypesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessorTypes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessorTypes.createStream(this.innerApiCalls.listProcessorTypes, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProcessorTypes`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The location of processor types to list.\n   *   Format: `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of processor types to return.\n   *   If unspecified, at most `100` processor types will be returned.\n   *   The maximum value is `500`. Values above `500` will be coerced to `500`.\n   * @param {string} request.pageToken\n   *   Used to retrieve the next page of results, empty if at the end of the list.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.documentai.v1.ProcessorType|ProcessorType}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.list_processor_types.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessorTypes_async\n   */\n  listProcessorTypesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessorTypes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessorTypes.asyncIterate(this.innerApiCalls['listProcessorTypes'], request, callSettings);\n  }\n  listProcessors(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProcessors(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent (project and location) which owns this collection of\n   *   Processors. Format: `projects/{project}/locations/{location}`\n   * @param {number} request.pageSize\n   *   The maximum number of processors to return.\n   *   If unspecified, at most `50` processors will be returned.\n   *   The maximum value is `100`. Values above `100` will be coerced to `100`.\n   * @param {string} request.pageToken\n   *   We will return the processors sorted by creation time. The page token\n   *   will point to the next processor.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.Processor|Processor} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProcessorsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProcessorsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessors'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessors.createStream(this.innerApiCalls.listProcessors, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProcessors`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent (project and location) which owns this collection of\n   *   Processors. Format: `projects/{project}/locations/{location}`\n   * @param {number} request.pageSize\n   *   The maximum number of processors to return.\n   *   If unspecified, at most `50` processors will be returned.\n   *   The maximum value is `100`. Values above `100` will be coerced to `100`.\n   * @param {string} request.pageToken\n   *   We will return the processors sorted by creation time. The page token\n   *   will point to the next processor.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.documentai.v1.Processor|Processor}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.list_processors.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessors_async\n   */\n  listProcessorsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessors'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessors.asyncIterate(this.innerApiCalls['listProcessors'], request, callSettings);\n  }\n  listProcessorVersions(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProcessorVersions(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent (project, location and processor) to list all\n   *   versions. Format:\n   *   `projects/{project}/locations/{location}/processors/{processor}`\n   * @param {number} request.pageSize\n   *   The maximum number of processor versions to return.\n   *   If unspecified, at most `10` processor versions will be returned.\n   *   The maximum value is `20`. Values above `20` will be coerced to `20`.\n   * @param {string} request.pageToken\n   *   We will return the processor versions sorted by creation time. The page\n   *   token will point to the next processor version.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProcessorVersionsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProcessorVersionsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessorVersions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessorVersions.createStream(this.innerApiCalls.listProcessorVersions, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProcessorVersions`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent (project, location and processor) to list all\n   *   versions. Format:\n   *   `projects/{project}/locations/{location}/processors/{processor}`\n   * @param {number} request.pageSize\n   *   The maximum number of processor versions to return.\n   *   If unspecified, at most `10` processor versions will be returned.\n   *   The maximum value is `20`. Values above `20` will be coerced to `20`.\n   * @param {string} request.pageToken\n   *   We will return the processor versions sorted by creation time. The page\n   *   token will point to the next processor version.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.list_processor_versions.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessorVersions_async\n   */\n  listProcessorVersionsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProcessorVersions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProcessorVersions.asyncIterate(this.innerApiCalls['listProcessorVersions'], request, callSettings);\n  }\n  listEvaluations(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listEvaluations(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The resource name of the\n   *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} to list\n   *   evaluations for.\n   *   `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`\n   * @param {number} request.pageSize\n   *   The standard list page size.\n   *   If unspecified, at most `5` evaluations are returned.\n   *   The maximum value is `100`. Values above `100` are coerced to `100`.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListEvaluations` call.\n   *   Provide this to retrieve the subsequent page.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.Evaluation|Evaluation} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listEvaluationsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listEvaluationsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listEvaluations'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listEvaluations.createStream(this.innerApiCalls.listEvaluations, request, callSettings);\n  }\n  /**\n   * Equivalent to `listEvaluations`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The resource name of the\n   *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} to list\n   *   evaluations for.\n   *   `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`\n   * @param {number} request.pageSize\n   *   The standard list page size.\n   *   If unspecified, at most `5` evaluations are returned.\n   *   The maximum value is `100`. Values above `100` are coerced to `100`.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListEvaluations` call.\n   *   Provide this to retrieve the subsequent page.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.documentai.v1.Evaluation|Evaluation}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/document_processor_service.list_evaluations.js</caption>\n   * region_tag:documentai_v1_generated_DocumentProcessorService_ListEvaluations_async\n   */\n  listEvaluationsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listEvaluations'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listEvaluations.asyncIterate(this.innerApiCalls['listEvaluations'], request, callSettings);\n  }\n  /**\n   * Gets information about a location.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Resource name for the location.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\n   *   for more details and examples.\n   * @example\n   * ```\n   * const [response] = await client.getLocation(request);\n   * ```\n   */\n  getLocation(request, options, callback) {\n    return this.locationsClient.getLocation(request, options, callback);\n  }\n  /**\n   * Lists information about the supported locations for this service. Returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   The resource that owns the locations collection, if applicable.\n   * @param {string} request.filter\n   *   The standard list filter.\n   * @param {number} request.pageSize\n   *   The standard list page size.\n   * @param {string} request.pageToken\n   *   The standard list page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example\n   * ```\n   * const iterable = client.listLocationsAsync(request);\n   * for await (const response of iterable) {\n   *   // process response\n   * }\n   * ```\n   */\n  listLocationsAsync(request, options) {\n    return this.locationsClient.listLocationsAsync(request, options);\n  }\n  /**\n   * Gets the latest state of a long-running operation.  Clients can use this\n   * method to poll the operation result at intervals as recommended by the API\n   * service.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   *   for the details.\n   * @param {function(?Error, ?Object)=} callback\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing\n   *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * @return {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing\n   * {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * The promise has a method named \"cancel\" which cancels the ongoing API call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * const name = '';\n   * const [response] = await client.getOperation({name});\n   * // doThingsWith(response)\n   * ```\n   */\n  getOperation(request, options, callback) {\n    return this.operationsClient.getOperation(request, options, callback);\n  }\n  /**\n   * Lists operations that match the specified filter in the request. If the\n   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n   *\n   * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation collection.\n   * @param {string} request.filter - The standard list filter.\n   * @param {number=} request.pageSize -\n   *   The maximum number of resources contained in the underlying API\n   *   response. If page streaming is performed per-resource, this\n   *   parameter does not affect the return value. If page streaming is\n   *   performed per-page, this determines the maximum number of\n   *   resources in a page.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   *   details.\n   * @returns {Object}\n   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * for await (const response of client.listOperationsAsync(request));\n   * // doThingsWith(response)\n   * ```\n   */\n  listOperationsAsync(request, options) {\n    return this.operationsClient.listOperationsAsync(request, options);\n  }\n  /**\n   * Starts asynchronous cancellation on a long-running operation.  The server\n   * makes a best effort to cancel the operation, but success is not\n   * guaranteed.  If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n   * {@link Operations.GetOperation} or\n   * other methods to check whether the cancellation succeeded or whether the\n   * operation completed despite cancellation. On successful cancellation,\n   * the operation is not deleted; instead, it becomes an operation with\n   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n   * 1, corresponding to `Code.CANCELLED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be cancelled.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   * details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.cancelOperation({name: ''});\n   * ```\n   */\n  cancelOperation(request, options, callback) {\n    return this.operationsClient.cancelOperation(request, options, callback);\n  }\n  /**\n   * Deletes a long-running operation. This method indicates that the client is\n   * no longer interested in the operation result. It does not cancel the\n   * operation. If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be deleted.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   * for the details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.deleteOperation({name: ''});\n   * ```\n   */\n  deleteOperation(request, options, callback) {\n    return this.operationsClient.deleteOperation(request, options, callback);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified evaluation resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} processor\n   * @param {string} processor_version\n   * @param {string} evaluation\n   * @returns {string} Resource name string.\n   */\n  evaluationPath(project, location, processor, processorVersion, evaluation) {\n    return this.pathTemplates.evaluationPathTemplate.render({\n      project: project,\n      location: location,\n      processor: processor,\n      processor_version: processorVersion,\n      evaluation: evaluation\n    });\n  }\n  /**\n   * Parse the project from Evaluation resource.\n   *\n   * @param {string} evaluationName\n   *   A fully-qualified path representing Evaluation resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromEvaluationName(evaluationName) {\n    return this.pathTemplates.evaluationPathTemplate.match(evaluationName).project;\n  }\n  /**\n   * Parse the location from Evaluation resource.\n   *\n   * @param {string} evaluationName\n   *   A fully-qualified path representing Evaluation resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromEvaluationName(evaluationName) {\n    return this.pathTemplates.evaluationPathTemplate.match(evaluationName).location;\n  }\n  /**\n   * Parse the processor from Evaluation resource.\n   *\n   * @param {string} evaluationName\n   *   A fully-qualified path representing Evaluation resource.\n   * @returns {string} A string representing the processor.\n   */\n  matchProcessorFromEvaluationName(evaluationName) {\n    return this.pathTemplates.evaluationPathTemplate.match(evaluationName).processor;\n  }\n  /**\n   * Parse the processor_version from Evaluation resource.\n   *\n   * @param {string} evaluationName\n   *   A fully-qualified path representing Evaluation resource.\n   * @returns {string} A string representing the processor_version.\n   */\n  matchProcessorVersionFromEvaluationName(evaluationName) {\n    return this.pathTemplates.evaluationPathTemplate.match(evaluationName).processor_version;\n  }\n  /**\n   * Parse the evaluation from Evaluation resource.\n   *\n   * @param {string} evaluationName\n   *   A fully-qualified path representing Evaluation resource.\n   * @returns {string} A string representing the evaluation.\n   */\n  matchEvaluationFromEvaluationName(evaluationName) {\n    return this.pathTemplates.evaluationPathTemplate.match(evaluationName).evaluation;\n  }\n  /**\n   * Return a fully-qualified humanReviewConfig resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} processor\n   * @returns {string} Resource name string.\n   */\n  humanReviewConfigPath(project, location, processor) {\n    return this.pathTemplates.humanReviewConfigPathTemplate.render({\n      project: project,\n      location: location,\n      processor: processor\n    });\n  }\n  /**\n   * Parse the project from HumanReviewConfig resource.\n   *\n   * @param {string} humanReviewConfigName\n   *   A fully-qualified path representing HumanReviewConfig resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromHumanReviewConfigName(humanReviewConfigName) {\n    return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).project;\n  }\n  /**\n   * Parse the location from HumanReviewConfig resource.\n   *\n   * @param {string} humanReviewConfigName\n   *   A fully-qualified path representing HumanReviewConfig resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromHumanReviewConfigName(humanReviewConfigName) {\n    return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).location;\n  }\n  /**\n   * Parse the processor from HumanReviewConfig resource.\n   *\n   * @param {string} humanReviewConfigName\n   *   A fully-qualified path representing HumanReviewConfig resource.\n   * @returns {string} A string representing the processor.\n   */\n  matchProcessorFromHumanReviewConfigName(humanReviewConfigName) {\n    return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).processor;\n  }\n  /**\n   * Return a fully-qualified location resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\n   * Parse the location from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\n   * Return a fully-qualified processor resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} processor\n   * @returns {string} Resource name string.\n   */\n  processorPath(project, location, processor) {\n    return this.pathTemplates.processorPathTemplate.render({\n      project: project,\n      location: location,\n      processor: processor\n    });\n  }\n  /**\n   * Parse the project from Processor resource.\n   *\n   * @param {string} processorName\n   *   A fully-qualified path representing Processor resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProcessorName(processorName) {\n    return this.pathTemplates.processorPathTemplate.match(processorName).project;\n  }\n  /**\n   * Parse the location from Processor resource.\n   *\n   * @param {string} processorName\n   *   A fully-qualified path representing Processor resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProcessorName(processorName) {\n    return this.pathTemplates.processorPathTemplate.match(processorName).location;\n  }\n  /**\n   * Parse the processor from Processor resource.\n   *\n   * @param {string} processorName\n   *   A fully-qualified path representing Processor resource.\n   * @returns {string} A string representing the processor.\n   */\n  matchProcessorFromProcessorName(processorName) {\n    return this.pathTemplates.processorPathTemplate.match(processorName).processor;\n  }\n  /**\n   * Return a fully-qualified processorType resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} processor_type\n   * @returns {string} Resource name string.\n   */\n  processorTypePath(project, location, processorType) {\n    return this.pathTemplates.processorTypePathTemplate.render({\n      project: project,\n      location: location,\n      processor_type: processorType\n    });\n  }\n  /**\n   * Parse the project from ProcessorType resource.\n   *\n   * @param {string} processorTypeName\n   *   A fully-qualified path representing ProcessorType resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProcessorTypeName(processorTypeName) {\n    return this.pathTemplates.processorTypePathTemplate.match(processorTypeName).project;\n  }\n  /**\n   * Parse the location from ProcessorType resource.\n   *\n   * @param {string} processorTypeName\n   *   A fully-qualified path representing ProcessorType resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProcessorTypeName(processorTypeName) {\n    return this.pathTemplates.processorTypePathTemplate.match(processorTypeName).location;\n  }\n  /**\n   * Parse the processor_type from ProcessorType resource.\n   *\n   * @param {string} processorTypeName\n   *   A fully-qualified path representing ProcessorType resource.\n   * @returns {string} A string representing the processor_type.\n   */\n  matchProcessorTypeFromProcessorTypeName(processorTypeName) {\n    return this.pathTemplates.processorTypePathTemplate.match(processorTypeName).processor_type;\n  }\n  /**\n   * Return a fully-qualified processorVersion resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} processor\n   * @param {string} processor_version\n   * @returns {string} Resource name string.\n   */\n  processorVersionPath(project, location, processor, processorVersion) {\n    return this.pathTemplates.processorVersionPathTemplate.render({\n      project: project,\n      location: location,\n      processor: processor,\n      processor_version: processorVersion\n    });\n  }\n  /**\n   * Parse the project from ProcessorVersion resource.\n   *\n   * @param {string} processorVersionName\n   *   A fully-qualified path representing ProcessorVersion resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProcessorVersionName(processorVersionName) {\n    return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).project;\n  }\n  /**\n   * Parse the location from ProcessorVersion resource.\n   *\n   * @param {string} processorVersionName\n   *   A fully-qualified path representing ProcessorVersion resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProcessorVersionName(processorVersionName) {\n    return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).location;\n  }\n  /**\n   * Parse the processor from ProcessorVersion resource.\n   *\n   * @param {string} processorVersionName\n   *   A fully-qualified path representing ProcessorVersion resource.\n   * @returns {string} A string representing the processor.\n   */\n  matchProcessorFromProcessorVersionName(processorVersionName) {\n    return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).processor;\n  }\n  /**\n   * Parse the processor_version from ProcessorVersion resource.\n   *\n   * @param {string} processorVersionName\n   *   A fully-qualified path representing ProcessorVersion resource.\n   * @returns {string} A string representing the processor_version.\n   */\n  matchProcessorVersionFromProcessorVersionName(processorVersionName) {\n    return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).processor_version;\n  }\n  /**\n   * Return a fully-qualified project resource name string.\n   *\n   * @param {string} project\n   * @returns {string} Resource name string.\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\n   * Parse the project from Project resource.\n   *\n   * @param {string} projectName\n   *   A fully-qualified path representing Project resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.documentProcessorServiceStub && !this._terminated) {\n      return this.documentProcessorServiceStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.locationsClient.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.DocumentProcessorServiceClient = DocumentProcessorServiceClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","DocumentProcessorServiceClient","jsonProtos","require","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_c","_d","_e","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","locationsClient","LocationsClient","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","evaluationPathTemplate","PathTemplate","humanReviewConfigPathTemplate","locationPathTemplate","processorPathTemplate","processorTypePathTemplate","processorVersionPathTemplate","projectPathTemplate","listProcessorTypes","PageDescriptor","listProcessors","listProcessorVersions","listEvaluations","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","protoJson","httpRules","selector","get","additional_bindings","post","operationsClient","lro","batchProcessDocumentsResponse","lookup","batchProcessDocumentsMetadata","trainProcessorVersionResponse","trainProcessorVersionMetadata","deleteProcessorVersionResponse","deleteProcessorVersionMetadata","deployProcessorVersionResponse","deployProcessorVersionMetadata","undeployProcessorVersionResponse","undeployProcessorVersionMetadata","deleteProcessorResponse","deleteProcessorMetadata","enableProcessorResponse","enableProcessorMetadata","disableProcessorResponse","disableProcessorMetadata","setDefaultProcessorVersionResponse","setDefaultProcessorVersionMetadata","reviewDocumentResponse","reviewDocumentMetadata","evaluateProcessorVersionResponse","evaluateProcessorVersionMetadata","batchProcessDocuments","LongrunningDescriptor","decode","bind","trainProcessorVersion","deleteProcessorVersion","deployProcessorVersion","undeployProcessorVersion","deleteProcessor","enableProcessor","disableProcessor","setDefaultProcessorVersion","reviewDocument","evaluateProcessorVersion","_defaults","constructSettings","join","innerApiCalls","warn","initialize","documentProcessorServiceStub","createStub","lookupService","google","cloud","documentai","v1","DocumentProcessorService","documentProcessorServiceStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","processDocument","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","name","fetchProcessorTypes","parent","getProcessorType","getProcessor","getProcessorVersion","createProcessor","getEvaluation","checkBatchProcessDocumentsProgress","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","checkTrainProcessorVersionProgress","checkDeleteProcessorVersionProgress","checkDeployProcessorVersionProgress","checkUndeployProcessorVersionProgress","checkDeleteProcessorProgress","checkEnableProcessorProgress","checkDisableProcessorProgress","processor","checkSetDefaultProcessorVersionProgress","human_review_config","humanReviewConfig","checkReviewDocumentProgress","processor_version","processorVersion","checkEvaluateProcessorVersionProgress","listProcessorTypesStream","defaultCallSettings","callSettings","merge","createStream","listProcessorTypesAsync","asyncIterate","listProcessorsStream","listProcessorsAsync","listProcessorVersionsStream","listProcessorVersionsAsync","listEvaluationsStream","listEvaluationsAsync","getLocation","listLocationsAsync","listOperationsAsync","cancelOperation","deleteOperation","evaluationPath","project","location","evaluation","render","matchProjectFromEvaluationName","evaluationName","match","matchLocationFromEvaluationName","matchProcessorFromEvaluationName","matchProcessorVersionFromEvaluationName","matchEvaluationFromEvaluationName","humanReviewConfigPath","matchProjectFromHumanReviewConfigName","humanReviewConfigName","matchLocationFromHumanReviewConfigName","matchProcessorFromHumanReviewConfigName","locationPath","matchProjectFromLocationName","locationName","matchLocationFromLocationName","processorPath","matchProjectFromProcessorName","processorName","matchLocationFromProcessorName","matchProcessorFromProcessorName","processorTypePath","processorType","processor_type","matchProjectFromProcessorTypeName","processorTypeName","matchLocationFromProcessorTypeName","matchProcessorTypeFromProcessorTypeName","processorVersionPath","matchProjectFromProcessorVersionName","processorVersionName","matchLocationFromProcessorVersionName","matchProcessorFromProcessorVersionName","matchProcessorVersionFromProcessorVersionName","projectPath","matchProjectFromProjectName","projectName","close","resolve"],"sources":["/Users/debjani1413/swipe-clone/node_modules/@google-cloud/documentai/build/src/v1/document_processor_service_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentProcessorServiceClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/document_processor_service_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./document_processor_service_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service to call Document AI to process documents according to the\n *  processor's definition. Processors are built using state-of-the-art Google\n *  AI such as natural language, computer vision, and translation to extract\n *  structured information from unstructured or semi-structured documents.\n * @class\n * @memberof v1\n */\nclass DocumentProcessorServiceClient {\n    /**\n     * Construct an instance of DocumentProcessorServiceClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new DocumentProcessorServiceClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this\n            .constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'documentai.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            evaluationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}'),\n            humanReviewConfigPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/humanReviewConfig'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            processorPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}'),\n            processorTypePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processorTypes/{processor_type}'),\n            processorVersionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProcessorTypes: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processorTypes'),\n            listProcessors: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processors'),\n            listProcessorVersions: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'processorVersions'),\n            listEvaluations: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'evaluations'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.cloud.location.Locations.GetLocation',\n                    get: '/v1/{name=projects/*/locations/*}',\n                    additional_bindings: [\n                        { get: '/uiv1beta3/{name=projects/*/locations/*}' },\n                    ],\n                },\n                {\n                    selector: 'google.cloud.location.Locations.ListLocations',\n                    get: '/v1/{name=projects/*}/locations',\n                    additional_bindings: [\n                        { get: '/uiv1beta3/{name=projects/*}/locations' },\n                    ],\n                },\n                {\n                    selector: 'google.longrunning.Operations.CancelOperation',\n                    post: '/v1/{name=projects/*/locations/*/operations/*}:cancel',\n                    additional_bindings: [\n                        {\n                            post: '/uiv1beta3/{name=projects/*/locations/*/operations/*}:cancel',\n                        },\n                    ],\n                },\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1/{name=projects/*/operations/*}',\n                    additional_bindings: [\n                        { get: '/v1/{name=projects/*/locations/*/operations/*}' },\n                        { get: '/uiv1beta3/{name=projects/*/locations/*/operations/*}' },\n                    ],\n                },\n                {\n                    selector: 'google.longrunning.Operations.ListOperations',\n                    get: '/v1/{name=projects/*/locations/*/operations}',\n                    additional_bindings: [\n                        { get: '/uiv1beta3/{name=projects/*/locations/*/operations}' },\n                    ],\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const batchProcessDocumentsResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.BatchProcessResponse');\n        const batchProcessDocumentsMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.BatchProcessMetadata');\n        const trainProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.TrainProcessorVersionResponse');\n        const trainProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.TrainProcessorVersionMetadata');\n        const deleteProcessorVersionResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n        const deleteProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeleteProcessorVersionMetadata');\n        const deployProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeployProcessorVersionResponse');\n        const deployProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeployProcessorVersionMetadata');\n        const undeployProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.UndeployProcessorVersionResponse');\n        const undeployProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.UndeployProcessorVersionMetadata');\n        const deleteProcessorResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n        const deleteProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DeleteProcessorMetadata');\n        const enableProcessorResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.EnableProcessorResponse');\n        const enableProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.EnableProcessorMetadata');\n        const disableProcessorResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.DisableProcessorResponse');\n        const disableProcessorMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.DisableProcessorMetadata');\n        const setDefaultProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse');\n        const setDefaultProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata');\n        const reviewDocumentResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.ReviewDocumentResponse');\n        const reviewDocumentMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.ReviewDocumentOperationMetadata');\n        const evaluateProcessorVersionResponse = protoFilesRoot.lookup('.google.cloud.documentai.v1.EvaluateProcessorVersionResponse');\n        const evaluateProcessorVersionMetadata = protoFilesRoot.lookup('.google.cloud.documentai.v1.EvaluateProcessorVersionMetadata');\n        this.descriptors.longrunning = {\n            batchProcessDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, batchProcessDocumentsResponse.decode.bind(batchProcessDocumentsResponse), batchProcessDocumentsMetadata.decode.bind(batchProcessDocumentsMetadata)),\n            trainProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, trainProcessorVersionResponse.decode.bind(trainProcessorVersionResponse), trainProcessorVersionMetadata.decode.bind(trainProcessorVersionMetadata)),\n            deleteProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteProcessorVersionResponse.decode.bind(deleteProcessorVersionResponse), deleteProcessorVersionMetadata.decode.bind(deleteProcessorVersionMetadata)),\n            deployProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deployProcessorVersionResponse.decode.bind(deployProcessorVersionResponse), deployProcessorVersionMetadata.decode.bind(deployProcessorVersionMetadata)),\n            undeployProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeployProcessorVersionResponse.decode.bind(undeployProcessorVersionResponse), undeployProcessorVersionMetadata.decode.bind(undeployProcessorVersionMetadata)),\n            deleteProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteProcessorResponse.decode.bind(deleteProcessorResponse), deleteProcessorMetadata.decode.bind(deleteProcessorMetadata)),\n            enableProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, enableProcessorResponse.decode.bind(enableProcessorResponse), enableProcessorMetadata.decode.bind(enableProcessorMetadata)),\n            disableProcessor: new this._gaxModule.LongrunningDescriptor(this.operationsClient, disableProcessorResponse.decode.bind(disableProcessorResponse), disableProcessorMetadata.decode.bind(disableProcessorMetadata)),\n            setDefaultProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, setDefaultProcessorVersionResponse.decode.bind(setDefaultProcessorVersionResponse), setDefaultProcessorVersionMetadata.decode.bind(setDefaultProcessorVersionMetadata)),\n            reviewDocument: new this._gaxModule.LongrunningDescriptor(this.operationsClient, reviewDocumentResponse.decode.bind(reviewDocumentResponse), reviewDocumentMetadata.decode.bind(reviewDocumentMetadata)),\n            evaluateProcessorVersion: new this._gaxModule.LongrunningDescriptor(this.operationsClient, evaluateProcessorVersionResponse.decode.bind(evaluateProcessorVersionResponse), evaluateProcessorVersionMetadata.decode.bind(evaluateProcessorVersionMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.documentai.v1.DocumentProcessorService', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.documentProcessorServiceStub) {\n            return this.documentProcessorServiceStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.documentai.v1.DocumentProcessorService.\n        this.documentProcessorServiceStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.documentai.v1.DocumentProcessorService')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.documentai.v1\n                    .DocumentProcessorService, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const documentProcessorServiceStubMethods = [\n            'processDocument',\n            'batchProcessDocuments',\n            'fetchProcessorTypes',\n            'listProcessorTypes',\n            'getProcessorType',\n            'listProcessors',\n            'getProcessor',\n            'trainProcessorVersion',\n            'getProcessorVersion',\n            'listProcessorVersions',\n            'deleteProcessorVersion',\n            'deployProcessorVersion',\n            'undeployProcessorVersion',\n            'createProcessor',\n            'deleteProcessor',\n            'enableProcessor',\n            'disableProcessor',\n            'setDefaultProcessorVersion',\n            'reviewDocument',\n            'evaluateProcessorVersion',\n            'getEvaluation',\n            'listEvaluations',\n        ];\n        for (const methodName of documentProcessorServiceStubMethods) {\n            const callPromise = this.documentProcessorServiceStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.documentProcessorServiceStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'documentai.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'documentai.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    processDocument(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.processDocument(request, options, callback);\n    }\n    fetchProcessorTypes(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.fetchProcessorTypes(request, options, callback);\n    }\n    getProcessorType(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProcessorType(request, options, callback);\n    }\n    getProcessor(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProcessor(request, options, callback);\n    }\n    getProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProcessorVersion(request, options, callback);\n    }\n    createProcessor(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProcessor(request, options, callback);\n    }\n    getEvaluation(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getEvaluation(request, options, callback);\n    }\n    batchProcessDocuments(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.batchProcessDocuments(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `batchProcessDocuments()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.batch_process_documents.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_BatchProcessDocuments_async\n     */\n    async checkBatchProcessDocumentsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.batchProcessDocuments, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    trainProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.trainProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `trainProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.train_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_TrainProcessorVersion_async\n     */\n    async checkTrainProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.trainProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.delete_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_DeleteProcessorVersion_async\n     */\n    async checkDeleteProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deployProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deployProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deployProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.deploy_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_DeployProcessorVersion_async\n     */\n    async checkDeployProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deployProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeployProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeployProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeployProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.undeploy_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_UndeployProcessorVersion_async\n     */\n    async checkUndeployProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeployProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteProcessor(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProcessor(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteProcessor()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.delete_processor.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_DeleteProcessor_async\n     */\n    async checkDeleteProcessorProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteProcessor, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    enableProcessor(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.enableProcessor(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `enableProcessor()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.enable_processor.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_EnableProcessor_async\n     */\n    async checkEnableProcessorProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.enableProcessor, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    disableProcessor(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.disableProcessor(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `disableProcessor()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.disable_processor.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_DisableProcessor_async\n     */\n    async checkDisableProcessorProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.disableProcessor, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    setDefaultProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                processor: (_a = request.processor) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.setDefaultProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `setDefaultProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.set_default_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_SetDefaultProcessorVersion_async\n     */\n    async checkSetDefaultProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.setDefaultProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    reviewDocument(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                human_review_config: (_a = request.humanReviewConfig) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.reviewDocument(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `reviewDocument()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.review_document.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_ReviewDocument_async\n     */\n    async checkReviewDocumentProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.reviewDocument, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    evaluateProcessorVersion(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                processor_version: (_a = request.processorVersion) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.evaluateProcessorVersion(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `evaluateProcessorVersion()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.evaluate_processor_version.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_EvaluateProcessorVersion_async\n     */\n    async checkEvaluateProcessorVersionProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.evaluateProcessorVersion, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProcessorTypes(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProcessorTypes(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The location of processor types to list.\n     *   Format: `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of processor types to return.\n     *   If unspecified, at most `100` processor types will be returned.\n     *   The maximum value is `500`. Values above `500` will be coerced to `500`.\n     * @param {string} request.pageToken\n     *   Used to retrieve the next page of results, empty if at the end of the list.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.ProcessorType|ProcessorType} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProcessorTypesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProcessorTypesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessorTypes'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessorTypes.createStream(this.innerApiCalls.listProcessorTypes, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProcessorTypes`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The location of processor types to list.\n     *   Format: `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of processor types to return.\n     *   If unspecified, at most `100` processor types will be returned.\n     *   The maximum value is `500`. Values above `500` will be coerced to `500`.\n     * @param {string} request.pageToken\n     *   Used to retrieve the next page of results, empty if at the end of the list.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.documentai.v1.ProcessorType|ProcessorType}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.list_processor_types.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessorTypes_async\n     */\n    listProcessorTypesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessorTypes'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessorTypes.asyncIterate(this.innerApiCalls['listProcessorTypes'], request, callSettings);\n    }\n    listProcessors(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProcessors(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent (project and location) which owns this collection of\n     *   Processors. Format: `projects/{project}/locations/{location}`\n     * @param {number} request.pageSize\n     *   The maximum number of processors to return.\n     *   If unspecified, at most `50` processors will be returned.\n     *   The maximum value is `100`. Values above `100` will be coerced to `100`.\n     * @param {string} request.pageToken\n     *   We will return the processors sorted by creation time. The page token\n     *   will point to the next processor.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.Processor|Processor} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProcessorsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProcessorsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessors'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessors.createStream(this.innerApiCalls.listProcessors, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProcessors`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent (project and location) which owns this collection of\n     *   Processors. Format: `projects/{project}/locations/{location}`\n     * @param {number} request.pageSize\n     *   The maximum number of processors to return.\n     *   If unspecified, at most `50` processors will be returned.\n     *   The maximum value is `100`. Values above `100` will be coerced to `100`.\n     * @param {string} request.pageToken\n     *   We will return the processors sorted by creation time. The page token\n     *   will point to the next processor.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.documentai.v1.Processor|Processor}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.list_processors.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessors_async\n     */\n    listProcessorsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessors'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessors.asyncIterate(this.innerApiCalls['listProcessors'], request, callSettings);\n    }\n    listProcessorVersions(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProcessorVersions(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent (project, location and processor) to list all\n     *   versions. Format:\n     *   `projects/{project}/locations/{location}/processors/{processor}`\n     * @param {number} request.pageSize\n     *   The maximum number of processor versions to return.\n     *   If unspecified, at most `10` processor versions will be returned.\n     *   The maximum value is `20`. Values above `20` will be coerced to `20`.\n     * @param {string} request.pageToken\n     *   We will return the processor versions sorted by creation time. The page\n     *   token will point to the next processor version.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProcessorVersionsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProcessorVersionsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessorVersions'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessorVersions.createStream(this.innerApiCalls.listProcessorVersions, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProcessorVersions`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent (project, location and processor) to list all\n     *   versions. Format:\n     *   `projects/{project}/locations/{location}/processors/{processor}`\n     * @param {number} request.pageSize\n     *   The maximum number of processor versions to return.\n     *   If unspecified, at most `10` processor versions will be returned.\n     *   The maximum value is `20`. Values above `20` will be coerced to `20`.\n     * @param {string} request.pageToken\n     *   We will return the processor versions sorted by creation time. The page\n     *   token will point to the next processor version.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.list_processor_versions.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_ListProcessorVersions_async\n     */\n    listProcessorVersionsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProcessorVersions'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProcessorVersions.asyncIterate(this.innerApiCalls['listProcessorVersions'], request, callSettings);\n    }\n    listEvaluations(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listEvaluations(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The resource name of the\n     *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} to list\n     *   evaluations for.\n     *   `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`\n     * @param {number} request.pageSize\n     *   The standard list page size.\n     *   If unspecified, at most `5` evaluations are returned.\n     *   The maximum value is `100`. Values above `100` are coerced to `100`.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListEvaluations` call.\n     *   Provide this to retrieve the subsequent page.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.documentai.v1.Evaluation|Evaluation} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listEvaluationsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listEvaluationsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listEvaluations'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listEvaluations.createStream(this.innerApiCalls.listEvaluations, request, callSettings);\n    }\n    /**\n     * Equivalent to `listEvaluations`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The resource name of the\n     *   {@link protos.google.cloud.documentai.v1.ProcessorVersion|ProcessorVersion} to list\n     *   evaluations for.\n     *   `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`\n     * @param {number} request.pageSize\n     *   The standard list page size.\n     *   If unspecified, at most `5` evaluations are returned.\n     *   The maximum value is `100`. Values above `100` are coerced to `100`.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListEvaluations` call.\n     *   Provide this to retrieve the subsequent page.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.documentai.v1.Evaluation|Evaluation}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/document_processor_service.list_evaluations.js</caption>\n     * region_tag:documentai_v1_generated_DocumentProcessorService_ListEvaluations_async\n     */\n    listEvaluationsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listEvaluations'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listEvaluations.asyncIterate(this.innerApiCalls['listEvaluations'], request, callSettings);\n    }\n    /**\n     * Gets information about a location.\n     *\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Resource name for the location.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\n     * @returns {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const [response] = await client.getLocation(request);\n     * ```\n     */\n    getLocation(request, options, callback) {\n        return this.locationsClient.getLocation(request, options, callback);\n    }\n    /**\n     * Lists information about the supported locations for this service. Returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   The resource that owns the locations collection, if applicable.\n     * @param {string} request.filter\n     *   The standard list filter.\n     * @param {number} request.pageSize\n     *   The standard list page size.\n     * @param {string} request.pageToken\n     *   The standard list page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const iterable = client.listLocationsAsync(request);\n     * for await (const response of iterable) {\n     *   // process response\n     * }\n     * ```\n     */\n    listLocationsAsync(request, options) {\n        return this.locationsClient.listLocationsAsync(request, options);\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, options, callback) {\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, options, callback) {\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, options, callback) {\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified evaluation resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} processor\n     * @param {string} processor_version\n     * @param {string} evaluation\n     * @returns {string} Resource name string.\n     */\n    evaluationPath(project, location, processor, processorVersion, evaluation) {\n        return this.pathTemplates.evaluationPathTemplate.render({\n            project: project,\n            location: location,\n            processor: processor,\n            processor_version: processorVersion,\n            evaluation: evaluation,\n        });\n    }\n    /**\n     * Parse the project from Evaluation resource.\n     *\n     * @param {string} evaluationName\n     *   A fully-qualified path representing Evaluation resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromEvaluationName(evaluationName) {\n        return this.pathTemplates.evaluationPathTemplate.match(evaluationName)\n            .project;\n    }\n    /**\n     * Parse the location from Evaluation resource.\n     *\n     * @param {string} evaluationName\n     *   A fully-qualified path representing Evaluation resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromEvaluationName(evaluationName) {\n        return this.pathTemplates.evaluationPathTemplate.match(evaluationName)\n            .location;\n    }\n    /**\n     * Parse the processor from Evaluation resource.\n     *\n     * @param {string} evaluationName\n     *   A fully-qualified path representing Evaluation resource.\n     * @returns {string} A string representing the processor.\n     */\n    matchProcessorFromEvaluationName(evaluationName) {\n        return this.pathTemplates.evaluationPathTemplate.match(evaluationName)\n            .processor;\n    }\n    /**\n     * Parse the processor_version from Evaluation resource.\n     *\n     * @param {string} evaluationName\n     *   A fully-qualified path representing Evaluation resource.\n     * @returns {string} A string representing the processor_version.\n     */\n    matchProcessorVersionFromEvaluationName(evaluationName) {\n        return this.pathTemplates.evaluationPathTemplate.match(evaluationName)\n            .processor_version;\n    }\n    /**\n     * Parse the evaluation from Evaluation resource.\n     *\n     * @param {string} evaluationName\n     *   A fully-qualified path representing Evaluation resource.\n     * @returns {string} A string representing the evaluation.\n     */\n    matchEvaluationFromEvaluationName(evaluationName) {\n        return this.pathTemplates.evaluationPathTemplate.match(evaluationName)\n            .evaluation;\n    }\n    /**\n     * Return a fully-qualified humanReviewConfig resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} processor\n     * @returns {string} Resource name string.\n     */\n    humanReviewConfigPath(project, location, processor) {\n        return this.pathTemplates.humanReviewConfigPathTemplate.render({\n            project: project,\n            location: location,\n            processor: processor,\n        });\n    }\n    /**\n     * Parse the project from HumanReviewConfig resource.\n     *\n     * @param {string} humanReviewConfigName\n     *   A fully-qualified path representing HumanReviewConfig resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromHumanReviewConfigName(humanReviewConfigName) {\n        return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).project;\n    }\n    /**\n     * Parse the location from HumanReviewConfig resource.\n     *\n     * @param {string} humanReviewConfigName\n     *   A fully-qualified path representing HumanReviewConfig resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromHumanReviewConfigName(humanReviewConfigName) {\n        return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).location;\n    }\n    /**\n     * Parse the processor from HumanReviewConfig resource.\n     *\n     * @param {string} humanReviewConfigName\n     *   A fully-qualified path representing HumanReviewConfig resource.\n     * @returns {string} A string representing the processor.\n     */\n    matchProcessorFromHumanReviewConfigName(humanReviewConfigName) {\n        return this.pathTemplates.humanReviewConfigPathTemplate.match(humanReviewConfigName).processor;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified processor resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} processor\n     * @returns {string} Resource name string.\n     */\n    processorPath(project, location, processor) {\n        return this.pathTemplates.processorPathTemplate.render({\n            project: project,\n            location: location,\n            processor: processor,\n        });\n    }\n    /**\n     * Parse the project from Processor resource.\n     *\n     * @param {string} processorName\n     *   A fully-qualified path representing Processor resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProcessorName(processorName) {\n        return this.pathTemplates.processorPathTemplate.match(processorName)\n            .project;\n    }\n    /**\n     * Parse the location from Processor resource.\n     *\n     * @param {string} processorName\n     *   A fully-qualified path representing Processor resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProcessorName(processorName) {\n        return this.pathTemplates.processorPathTemplate.match(processorName)\n            .location;\n    }\n    /**\n     * Parse the processor from Processor resource.\n     *\n     * @param {string} processorName\n     *   A fully-qualified path representing Processor resource.\n     * @returns {string} A string representing the processor.\n     */\n    matchProcessorFromProcessorName(processorName) {\n        return this.pathTemplates.processorPathTemplate.match(processorName)\n            .processor;\n    }\n    /**\n     * Return a fully-qualified processorType resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} processor_type\n     * @returns {string} Resource name string.\n     */\n    processorTypePath(project, location, processorType) {\n        return this.pathTemplates.processorTypePathTemplate.render({\n            project: project,\n            location: location,\n            processor_type: processorType,\n        });\n    }\n    /**\n     * Parse the project from ProcessorType resource.\n     *\n     * @param {string} processorTypeName\n     *   A fully-qualified path representing ProcessorType resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProcessorTypeName(processorTypeName) {\n        return this.pathTemplates.processorTypePathTemplate.match(processorTypeName)\n            .project;\n    }\n    /**\n     * Parse the location from ProcessorType resource.\n     *\n     * @param {string} processorTypeName\n     *   A fully-qualified path representing ProcessorType resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProcessorTypeName(processorTypeName) {\n        return this.pathTemplates.processorTypePathTemplate.match(processorTypeName)\n            .location;\n    }\n    /**\n     * Parse the processor_type from ProcessorType resource.\n     *\n     * @param {string} processorTypeName\n     *   A fully-qualified path representing ProcessorType resource.\n     * @returns {string} A string representing the processor_type.\n     */\n    matchProcessorTypeFromProcessorTypeName(processorTypeName) {\n        return this.pathTemplates.processorTypePathTemplate.match(processorTypeName)\n            .processor_type;\n    }\n    /**\n     * Return a fully-qualified processorVersion resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} processor\n     * @param {string} processor_version\n     * @returns {string} Resource name string.\n     */\n    processorVersionPath(project, location, processor, processorVersion) {\n        return this.pathTemplates.processorVersionPathTemplate.render({\n            project: project,\n            location: location,\n            processor: processor,\n            processor_version: processorVersion,\n        });\n    }\n    /**\n     * Parse the project from ProcessorVersion resource.\n     *\n     * @param {string} processorVersionName\n     *   A fully-qualified path representing ProcessorVersion resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProcessorVersionName(processorVersionName) {\n        return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).project;\n    }\n    /**\n     * Parse the location from ProcessorVersion resource.\n     *\n     * @param {string} processorVersionName\n     *   A fully-qualified path representing ProcessorVersion resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProcessorVersionName(processorVersionName) {\n        return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).location;\n    }\n    /**\n     * Parse the processor from ProcessorVersion resource.\n     *\n     * @param {string} processorVersionName\n     *   A fully-qualified path representing ProcessorVersion resource.\n     * @returns {string} A string representing the processor.\n     */\n    matchProcessorFromProcessorVersionName(processorVersionName) {\n        return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).processor;\n    }\n    /**\n     * Parse the processor_version from ProcessorVersion resource.\n     *\n     * @param {string} processorVersionName\n     *   A fully-qualified path representing ProcessorVersion resource.\n     * @returns {string} A string representing the processor_version.\n     */\n    matchProcessorVersionFromProcessorVersionName(processorVersionName) {\n        return this.pathTemplates.processorVersionPathTemplate.match(processorVersionName).processor_version;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.documentProcessorServiceStub && !this._terminated) {\n            return this.documentProcessorServiceStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.locationsClient.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.DocumentProcessorServiceClient = DocumentProcessorServiceClient;\n//# sourceMappingURL=document_processor_service_client.js.map"],"mappings":"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AAmB,CAACE,KAAK,CAACvC,OAAO,CAAC;IACvD,IAAI,CAAC7B,UAAU,CAAC,CAAC;IACjB,OAAO,IAAI,CAACnH,WAAW,CAACC,IAAI,CAACyD,eAAe,CAACgI,YAAY,CAAC,IAAI,CAACzE,aAAa,CAAC,iBAAiB,CAAC,EAAE6B,OAAO,EAAEwC,YAAY,CAAC;EAC3H;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,WAAWA,CAACnD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACpC,OAAO,IAAI,CAAC1G,eAAe,CAAC+J,WAAW,CAACnD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsD,kBAAkBA,CAACpD,OAAO,EAAEE,OAAO,EAAE;IACjC,OAAO,IAAI,CAAC9G,eAAe,CAACgK,kBAAkB,CAACpD,OAAO,EAAEE,OAAO,CAAC;EACpE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIiB,YAAYA,CAACnB,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACrC,OAAO,IAAI,CAACrE,gBAAgB,CAAC0F,YAAY,CAACnB,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EACzE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIuD,mBAAmBA,CAACrD,OAAO,EAAEE,OAAO,EAAE;IAClC,OAAO,IAAI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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}