{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Papa from \"papaparse\";\nimport { read, utils } from \"xlsx\";\nimport { useDispatch } from \"react-redux\";\nimport { setUploadMessage } from \"../redux/uploadSlice\";\nimport { useSendFile } from \"./useSendFile\"; // Reuse the `useSendFile` hook\n\nexport const useFileChange = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sendFile = useSendFile(); // Use the sendFile logic\n\n  const [csvData, setCsvData] = useState(\"\");\n  const convertFile = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const csvData = Papa.unparse(utils.sheet_to_json(sheet), {\n        header: false\n      });\n      const newHeader = \"Register No, Student Name, Branch, Semester, Course, Exam Type, Attendance, Withheld, IMark, Grade, Result\\n\";\n      const finalCSVData = newHeader + csvData.substring(csvData.indexOf(\"\\n\") + 1);\n      setCsvData(finalCSVData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n      if (file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        convertFile(file);\n        sendFile(csvData);\n      } else\n        // Call the sendFile function from the hook\n        sendFile(file);\n\n      // Simulate a delay for setting the upload message\n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000);\n    }\n  };\n  return handleFileChange; // Return the handler function\n};\n_s(useFileChange, \"6Ih+4hzmG//d2Sk5ZudorxpiYuw=\", false, function () {\n  return [useDispatch, useSendFile];\n});","map":{"version":3,"names":["useState","Papa","read","utils","useDispatch","setUploadMessage","useSendFile","useFileChange","_s","dispatch","sendFile","csvData","setCsvData","convertFile","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","type","sheetName","SheetNames","sheet","Sheets","unparse","sheet_to_json","header","newHeader","finalCSVData","substring","indexOf","readAsArrayBuffer","handleFileChange","console","log","setTimeout","name"],"sources":["/Users/debjani1413/swipe-clone/frontend/src/hooks/useFileChange.js"],"sourcesContent":["import {useState} from 'react';\nimport Papa from \"papaparse\";\nimport { read, utils } from \"xlsx\";\nimport { useDispatch } from \"react-redux\";\nimport { setUploadMessage } from \"../redux/uploadSlice\";\nimport { useSendFile } from \"./useSendFile\"; // Reuse the `useSendFile` hook\n\nexport const useFileChange = () => {\n  const dispatch = useDispatch();\n  const sendFile = useSendFile(); // Use the sendFile logic\n\n  const [csvData, setCsvData] = useState(\"\");\n\n  const convertFile = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const csvData = Papa.unparse(utils.sheet_to_json(sheet), {\n        header: false,\n      });\n      const newHeader = \"Register No, Student Name, Branch, Semester, Course, Exam Type, Attendance, Withheld, IMark, Grade, Result\\n\";\n      const finalCSVData= newHeader + csvData.substring(csvData.indexOf(\"\\n\") + 1)\n      setCsvData(finalCSVData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n\n      if(file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")\n      {convertFile(file); sendFile(csvData)}\n      else\n      // Call the sendFile function from the hook\n      sendFile(file);\n\n      // Simulate a delay for setting the upload message\n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000);\n    }\n  };\n\n  return handleFileChange; // Return the handler function\n};\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;;AAE7C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGvB,IAAI,CAACoB,IAAI,EAAE;QAAEI,IAAI,EAAE;MAAQ,CAAC,CAAC;MAC9C,MAAMC,SAAS,GAAGF,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,MAAM,CAACH,SAAS,CAAC;MACxC,MAAMhB,OAAO,GAAGV,IAAI,CAAC8B,OAAO,CAAC5B,KAAK,CAAC6B,aAAa,CAACH,KAAK,CAAC,EAAE;QACvDI,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,SAAS,GAAG,8GAA8G;MAChI,MAAMC,YAAY,GAAED,SAAS,GAAGvB,OAAO,CAACyB,SAAS,CAACzB,OAAO,CAAC0B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5EzB,UAAU,CAACuB,YAAY,CAAC;IAC1B,CAAC;IACDjB,MAAM,CAACoB,iBAAiB,CAACvB,IAAI,CAAC;EAChC,CAAC;EAGD,MAAMwB,gBAAgB,GAAIzB,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRyB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE1B,IAAI,CAAC;MAEnC,IAAGA,IAAI,CAACW,IAAI,KAAK,mEAAmE,EACpF;QAACb,WAAW,CAACE,IAAI,CAAC;QAAEL,QAAQ,CAACC,OAAO,CAAC;MAAA,CAAC;QAEtC;QACAD,QAAQ,CAACK,IAAI,CAAC;;MAEd;MACA2B,UAAU,CAAC,MAAM;QACfjC,QAAQ,CAACJ,gBAAgB,CAAC,SAASU,IAAI,CAAC4B,IAAI,0BAA0B,CAAC,CAAC;MAC1E,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,OAAOJ,gBAAgB,CAAC,CAAC;AAC3B,CAAC;AAAC/B,EAAA,CA5CWD,aAAa;EAAA,QACPH,WAAW,EACXE,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}