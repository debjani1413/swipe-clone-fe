{"ast":null,"code":"var _jsxFileName = \"/Users/debjani1413/swipe-clone/frontend/src/components/customersTab.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tab from \"./tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersTab = () => {\n  _s();\n  const tableData = useSelector(state => state.upload.tableData);\n\n  // Define Create-specific columns\n  const customerColumns = [{\n    label: \"Serial Number\",\n    key: \"invoiceId\"\n  }, {\n    label: \"Customer Name\",\n    key: \"customerName\"\n  }, {\n    label: \"Phone Number\",\n    key: \"phnNumber\"\n  }, {\n    label: \"Company Name\",\n    key: \"cmpName\"\n  }, {\n    label: \"Email\",\n    key: \"email\"\n  }, {\n    label: \"Amount\",\n    key: \"Amount\"\n  }, {\n    label: \"Total Amount\",\n    key: \"totalamount\"\n  }, {\n    label: \"Date\",\n    key: \"date\"\n  }];\n\n  // Transform table data for Create tab\n  const customerTableData = tableData.map((item, index) => {\n    return {\n      invoiceId: index + 1 || \"N/A\",\n      customerName: item.CustomerName,\n      phnNumber: item.PhoneNumber,\n      cmpName: item.CompanyName,\n      email: item.Email,\n      Amount: item.TotalAmount,\n      totalamount: item.AmountPayable,\n      date: item.Date\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Tab, {\n    buttonText: \"Add Customers\",\n    columns: customerColumns,\n    tabledata: customerTableData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomersTab, \"BlwAUEtzto+YGCy06t3dX5hQeA4=\", false, function () {\n  return [useSelector];\n});\n_c = CustomersTab;\nexport default CustomersTab;\nvar _c;\n$RefreshReg$(_c, \"CustomersTab\");","map":{"version":3,"names":["React","useSelector","Tab","jsxDEV","_jsxDEV","CustomersTab","_s","tableData","state","upload","customerColumns","label","key","customerTableData","map","item","index","invoiceId","customerName","CustomerName","phnNumber","PhoneNumber","cmpName","CompanyName","email","Email","Amount","TotalAmount","totalamount","AmountPayable","date","Date","buttonText","columns","tabledata","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/debjani1413/swipe-clone/frontend/src/components/customersTab.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tab from \"./tab\";\n\nconst CustomersTab = () => {\n  const tableData = useSelector((state) => state.upload.tableData);\n\n  // Define Create-specific columns\n  const customerColumns = [\n    { label: \"Serial Number\", key: \"invoiceId\" },\n    { label: \"Customer Name\", key: \"customerName\" },\n    { label: \"Phone Number\", key: \"phnNumber\" },\n    { label: \"Company Name\", key: \"cmpName\" },\n    { label: \"Email\", key: \"email\" },\n    { label: \"Amount\", key: \"Amount\" },\n    { label: \"Total Amount\", key: \"totalamount\" },\n    { label: \"Date\", key: \"date\" },\n  ];\n\n  // Transform table data for Create tab\n  const customerTableData = tableData.map((item,index) => {\n    return {\n    invoiceId: index+1 || \"N/A\",\n    customerName: item.CustomerName,\n    phnNumber: item.PhoneNumber,\n    cmpName: item.CompanyName,\n    email: item.Email,\n    Amount: item.TotalAmount,\n    totalamount: item.AmountPayable,\n    date: item.Date,\n    }\n  });\n\n  return (\n    <Tab \n    buttonText={\"Add Customers\"}\n    columns={customerColumns}\n    tabledata={customerTableData}\n    />\n  );\n};\n\nexport default CustomersTab;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,SAAS,CAAC;;EAEhE;EACA,MAAMG,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,eAAe;IAAEC,GAAG,EAAE;EAAY,CAAC,EAC5C;IAAED,KAAK,EAAE,eAAe;IAAEC,GAAG,EAAE;EAAe,CAAC,EAC/C;IAAED,KAAK,EAAE,cAAc;IAAEC,GAAG,EAAE;EAAY,CAAC,EAC3C;IAAED,KAAK,EAAE,cAAc;IAAEC,GAAG,EAAE;EAAU,CAAC,EACzC;IAAED,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAChC;IAAED,KAAK,EAAE,QAAQ;IAAEC,GAAG,EAAE;EAAS,CAAC,EAClC;IAAED,KAAK,EAAE,cAAc;IAAEC,GAAG,EAAE;EAAc,CAAC,EAC7C;IAAED,KAAK,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAO,CAAC,CAC/B;;EAED;EACA,MAAMC,iBAAiB,GAAGN,SAAS,CAACO,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAK;IACtD,OAAO;MACPC,SAAS,EAAED,KAAK,GAAC,CAAC,IAAI,KAAK;MAC3BE,YAAY,EAAEH,IAAI,CAACI,YAAY;MAC/BC,SAAS,EAAEL,IAAI,CAACM,WAAW;MAC3BC,OAAO,EAAEP,IAAI,CAACQ,WAAW;MACzBC,KAAK,EAAET,IAAI,CAACU,KAAK;MACjBC,MAAM,EAAEX,IAAI,CAACY,WAAW;MACxBC,WAAW,EAAEb,IAAI,CAACc,aAAa;MAC/BC,IAAI,EAAEf,IAAI,CAACgB;IACX,CAAC;EACH,CAAC,CAAC;EAEF,oBACE3B,OAAA,CAACF,GAAG;IACJ8B,UAAU,EAAE,eAAgB;IAC5BC,OAAO,EAAEvB,eAAgB;IACzBwB,SAAS,EAAErB;EAAkB;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEN,CAAC;AAAChC,EAAA,CApCID,YAAY;EAAA,QACEJ,WAAW;AAAA;AAAAsC,EAAA,GADzBlC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}