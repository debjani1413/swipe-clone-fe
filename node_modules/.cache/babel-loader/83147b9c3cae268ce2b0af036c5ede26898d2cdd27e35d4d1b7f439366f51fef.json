{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p3beta1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1p3beta1.Product|Product} has a collection of {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1p3beta1\n */\nclass ProductSearchClient {\n  /**\n   * Construct an instance of ProductSearchClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new ProductSearchClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'vision.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n      productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n      referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n      listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n      listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n      listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products')\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.ImportProductSetsResponse');\n    const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.BatchOperationMetadata');\n    this.descriptors.longrunning = {\n      importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p3beta1.ProductSearch', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.productSearchStub) {\n      return this.productSearchStub;\n    }\n    // Put together the \"service stub\" for\n    // google.cloud.vision.v1p3beta1.ProductSearch.\n    this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.vision.v1p3beta1.ProductSearch') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.vision.v1p3beta1.ProductSearch, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const productSearchStubMethods = ['createProductSet', 'listProductSets', 'getProductSet', 'updateProductSet', 'deleteProductSet', 'createProduct', 'listProducts', 'getProduct', 'updateProduct', 'deleteProduct', 'createReferenceImage', 'deleteReferenceImage', 'listReferenceImages', 'getReferenceImage', 'addProductToProductSet', 'removeProductFromProductSet', 'listProductsInProductSet', 'importProductSets'];\n    for (const methodName of productSearchStubMethods) {\n      const callPromise = this.productSearchStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.productSearchStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/cloud-vision'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  createProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createProductSet(request, options, callback);\n  }\n  getProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProductSet(request, options, callback);\n  }\n  updateProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateProductSet(request, options, callback);\n  }\n  deleteProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProductSet(request, options, callback);\n  }\n  createProduct(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createProduct(request, options, callback);\n  }\n  getProduct(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getProduct(request, options, callback);\n  }\n  updateProduct(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateProduct(request, options, callback);\n  }\n  deleteProduct(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteProduct(request, options, callback);\n  }\n  createReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createReferenceImage(request, options, callback);\n  }\n  deleteReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n  }\n  getReferenceImage(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getReferenceImage(request, options, callback);\n  }\n  addProductToProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.addProductToProductSet(request, options, callback);\n  }\n  removeProductFromProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n  }\n  importProductSets(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.importProductSets(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `importProductSets()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/product_search.import_product_sets.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ProductSearch_ImportProductSets_async\n   */\n  async checkImportProductSetsProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  listProductSets(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProductSets(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project from which ProductSets should be listed.\n   *\n   *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductSetsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProductSetsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProductSets`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project from which ProductSets should be listed.\n   *\n   *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/product_search.list_product_sets.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductSets_async\n   */\n  listProductSetsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n  }\n  listProducts(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProducts(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project OR ProductSet from which Products should be listed.\n   *\n   *   Format:\n   *   `projects/PROJECT_ID/locations/LOC_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProductsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProducts'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProducts`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project OR ProductSet from which Products should be listed.\n   *\n   *   Format:\n   *   `projects/PROJECT_ID/locations/LOC_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProducts_async\n   */\n  listProductsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProducts'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n  }\n  listReferenceImages(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listReferenceImages(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. Resource name of the product containing the reference images.\n   *\n   *   Format is\n   *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   A token identifying a page of results to be returned. This is the value\n   *   of `nextPageToken` returned in a previous reference image list request.\n   *\n   *   Defaults to the first page if not specified.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listReferenceImagesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listReferenceImagesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listReferenceImages'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n  }\n  /**\n   * Equivalent to `listReferenceImages`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. Resource name of the product containing the reference images.\n   *\n   *   Format is\n   *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   A token identifying a page of results to be returned. This is the value\n   *   of `nextPageToken` returned in a previous reference image list request.\n   *\n   *   Defaults to the first page if not specified.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/product_search.list_reference_images.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ProductSearch_ListReferenceImages_async\n   */\n  listReferenceImagesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listReferenceImages'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n  }\n  listProductsInProductSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The ProductSet resource for which to retrieve Products.\n   *\n   *   Format is:\n   *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listProductsInProductSetAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listProductsInProductSetStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductsInProductSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n  }\n  /**\n   * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The ProductSet resource for which to retrieve Products.\n   *\n   *   Format is:\n   *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n   * @param {number} request.pageSize\n   *   The maximum number of items to return. Default 10, maximum 100.\n   * @param {string} request.pageToken\n   *   The next_page_token returned from a previous List request, if any.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products_in_product_set.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductsInProductSet_async\n   */\n  listProductsInProductSetAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listProductsInProductSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified location resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\n   * Parse the location from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\n   * Return a fully-qualified product resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @returns {string} Resource name string.\n   */\n  productPath(project, location, product) {\n    return this.pathTemplates.productPathTemplate.render({\n      project: project,\n      location: location,\n      product: product\n    });\n  }\n  /**\n   * Parse the project from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).project;\n  }\n  /**\n   * Parse the location from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).location;\n  }\n  /**\n   * Parse the product from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the product.\n   */\n  matchProductFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).product;\n  }\n  /**\n   * Return a fully-qualified productSet resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product_set\n   * @returns {string} Resource name string.\n   */\n  productSetPath(project, location, productSet) {\n    return this.pathTemplates.productSetPathTemplate.render({\n      project: project,\n      location: location,\n      product_set: productSet\n    });\n  }\n  /**\n   * Parse the project from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).project;\n  }\n  /**\n   * Parse the location from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).location;\n  }\n  /**\n   * Parse the product_set from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the product_set.\n   */\n  matchProductSetFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).product_set;\n  }\n  /**\n   * Return a fully-qualified referenceImage resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @param {string} reference_image\n   * @returns {string} Resource name string.\n   */\n  referenceImagePath(project, location, product, referenceImage) {\n    return this.pathTemplates.referenceImagePathTemplate.render({\n      project: project,\n      location: location,\n      product: product,\n      reference_image: referenceImage\n    });\n  }\n  /**\n   * Parse the project from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n  }\n  /**\n   * Parse the location from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n  }\n  /**\n   * Parse the product from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the product.\n   */\n  matchProductFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n  }\n  /**\n   * Parse the reference_image from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the reference_image.\n   */\n  matchReferenceImageFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.productSearchStub && !this._terminated) {\n      return this.productSearchStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.ProductSearchClient = ProductSearchClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProductSearchClient","jsonProtos","require","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_c","_d","_e","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","locationPathTemplate","PathTemplate","productPathTemplate","productSetPathTemplate","referenceImagePathTemplate","listProductSets","PageDescriptor","listProducts","listReferenceImages","listProductsInProductSet","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","protoJson","httpRules","operationsClient","lro","importProductSetsResponse","lookup","importProductSetsMetadata","importProductSets","LongrunningDescriptor","decode","bind","_defaults","constructSettings","join","innerApiCalls","warn","initialize","productSearchStub","createStub","lookupService","google","cloud","vision","v1p3beta1","ProductSearch","productSearchStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","createProductSet","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","parent","getProductSet","name","updateProductSet","productSet","deleteProductSet","createProduct","getProduct","updateProduct","product","deleteProduct","createReferenceImage","deleteReferenceImage","getReferenceImage","addProductToProductSet","removeProductFromProductSet","checkImportProductSetsProgress","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","listProductSetsStream","defaultCallSettings","callSettings","merge","createStream","listProductSetsAsync","asyncIterate","listProductsStream","listProductsAsync","listReferenceImagesStream","listReferenceImagesAsync","listProductsInProductSetStream","listProductsInProductSetAsync","locationPath","project","location","render","matchProjectFromLocationName","locationName","match","matchLocationFromLocationName","productPath","matchProjectFromProductName","productName","matchLocationFromProductName","matchProductFromProductName","productSetPath","product_set","matchProjectFromProductSetName","productSetName","matchLocationFromProductSetName","matchProductSetFromProductSetName","referenceImagePath","referenceImage","reference_image","matchProjectFromReferenceImageName","referenceImageName","matchLocationFromReferenceImageName","matchProductFromReferenceImageName","matchReferenceImageFromReferenceImageName","close","resolve"],"sources":["/Users/debjani1413/swipe-clone/node_modules/@google-cloud/vision/build/src/v1p3beta1/product_search_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p3beta1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1p3beta1.Product|Product} has a collection of {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1p3beta1\n */\nclass ProductSearchClient {\n    /**\n     * Construct an instance of ProductSearchClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ProductSearchClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n            listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n            listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n            listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.ImportProductSetsResponse');\n        const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.BatchOperationMetadata');\n        this.descriptors.longrunning = {\n            importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p3beta1.ProductSearch', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.productSearchStub) {\n            return this.productSearchStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p3beta1.ProductSearch.\n        this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p3beta1.ProductSearch')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p3beta1.ProductSearch, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const productSearchStubMethods = [\n            'createProductSet',\n            'listProductSets',\n            'getProductSet',\n            'updateProductSet',\n            'deleteProductSet',\n            'createProduct',\n            'listProducts',\n            'getProduct',\n            'updateProduct',\n            'deleteProduct',\n            'createReferenceImage',\n            'deleteReferenceImage',\n            'listReferenceImages',\n            'getReferenceImage',\n            'addProductToProductSet',\n            'removeProductFromProductSet',\n            'listProductsInProductSet',\n            'importProductSets',\n        ];\n        for (const methodName of productSearchStubMethods) {\n            const callPromise = this.productSearchStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.productSearchStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProductSet(request, options, callback);\n    }\n    getProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProductSet(request, options, callback);\n    }\n    updateProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProductSet(request, options, callback);\n    }\n    deleteProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProductSet(request, options, callback);\n    }\n    createProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProduct(request, options, callback);\n    }\n    getProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProduct(request, options, callback);\n    }\n    updateProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProduct(request, options, callback);\n    }\n    deleteProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProduct(request, options, callback);\n    }\n    createReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createReferenceImage(request, options, callback);\n    }\n    deleteReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n    }\n    getReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getReferenceImage(request, options, callback);\n    }\n    addProductToProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.addProductToProductSet(request, options, callback);\n    }\n    removeProductFromProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n    }\n    importProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.importProductSets(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `importProductSets()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.import_product_sets.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ImportProductSets_async\n     */\n    async checkImportProductSetsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_product_sets.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductSets_async\n     */\n    listProductSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n    }\n    listProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProducts(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProducts`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProducts_async\n     */\n    listProductsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n    }\n    listReferenceImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listReferenceImages(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listReferenceImagesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listReferenceImagesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n    }\n    /**\n     * Equivalent to `listReferenceImages`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_reference_images.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListReferenceImages_async\n     */\n    listReferenceImagesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n    }\n    listProductsInProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsInProductSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsInProductSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products_in_product_set.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductsInProductSet_async\n     */\n    listProductsInProductSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.productSearchStub && !this._terminated) {\n            return this.productSearchStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ProductSearchClient = ProductSearchClient;\n//# sourceMappingURL=product_search_client.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}