{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { setUploadMessage } from \"../redux/uploadSlice\";\nimport { useSendFile } from \"./useSendFile\"; // Reuse the `useSendFile` hook\n\nexport const useFileChange = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sendFile = useSendFile(); // Use the sendFile logic\n\n  const [csvData, setCsvData] = useState(\"\");\n  const convertFile = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const csvData = Papa.unparse(utils.sheet_to_json(sheet), {\n        header: false\n      });\n      const newHeader = \"Register No, Student Name, Branch, Semester, Course, Exam Type, Attendance, Withheld, IMark, Grade, Result\\n\";\n      const finalCSVData = newHeader + csvData.substring(csvData.indexOf(\"\\n\") + 1);\n      setCsvData(finalCSVData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n      if (file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        convertFile(file);\n        file = csvData;\n      }\n\n      // Call the sendFile function from the hook\n      sendFile(file);\n\n      // Simulate a delay for setting the upload message\n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000);\n    }\n  };\n  return handleFileChange; // Return the handler function\n};\n_s(useFileChange, \"6Ih+4hzmG//d2Sk5ZudorxpiYuw=\", false, function () {\n  return [useDispatch, useSendFile];\n});","map":{"version":3,"names":["useDispatch","setUploadMessage","useSendFile","useFileChange","_s","dispatch","sendFile","csvData","setCsvData","useState","convertFile","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","Papa","unparse","utils","sheet_to_json","header","newHeader","finalCSVData","substring","indexOf","readAsArrayBuffer","handleFileChange","console","log","setTimeout","name"],"sources":["/Users/debjani1413/swipe-clone/frontend/src/hooks/useFileChange.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { setUploadMessage } from \"../redux/uploadSlice\";\nimport { useSendFile } from \"./useSendFile\"; // Reuse the `useSendFile` hook\n\nexport const useFileChange = () => {\n  const dispatch = useDispatch();\n  const sendFile = useSendFile(); // Use the sendFile logic\n\n  const [csvData, setCsvData] = useState(\"\");\n\n  const convertFile = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const csvData = Papa.unparse(utils.sheet_to_json(sheet), {\n        header: false,\n      });\n      const newHeader = \"Register No, Student Name, Branch, Semester, Course, Exam Type, Attendance, Withheld, IMark, Grade, Result\\n\";\n      const finalCSVData= newHeader + csvData.substring(csvData.indexOf(\"\\n\") + 1)\n      setCsvData(finalCSVData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n\n      if(file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")\n      {convertFile(file); file = csvData;}\n      \n      // Call the sendFile function from the hook\n      sendFile(file);\n\n      // Simulate a delay for setting the upload message\n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000);\n    }\n  };\n\n  return handleFileChange; // Return the handler function\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;;AAE7C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGC,IAAI,CAACJ,IAAI,EAAE;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;MAC9C,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;MACxC,MAAMlB,OAAO,GAAGsB,IAAI,CAACC,OAAO,CAACC,KAAK,CAACC,aAAa,CAACL,KAAK,CAAC,EAAE;QACvDM,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,SAAS,GAAG,8GAA8G;MAChI,MAAMC,YAAY,GAAED,SAAS,GAAG3B,OAAO,CAAC6B,SAAS,CAAC7B,OAAO,CAAC8B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5E7B,UAAU,CAAC2B,YAAY,CAAC;IAC1B,CAAC;IACDpB,MAAM,CAACuB,iBAAiB,CAAC1B,IAAI,CAAC;EAChC,CAAC;EAGD,MAAM2B,gBAAgB,GAAI5B,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR4B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE7B,IAAI,CAAC;MAEnC,IAAGA,IAAI,CAACY,IAAI,KAAK,mEAAmE,EACpF;QAACd,WAAW,CAACE,IAAI,CAAC;QAAEA,IAAI,GAAGL,OAAO;MAAC;;MAEnC;MACAD,QAAQ,CAACM,IAAI,CAAC;;MAEd;MACA8B,UAAU,CAAC,MAAM;QACfrC,QAAQ,CAACJ,gBAAgB,CAAC,SAASW,IAAI,CAAC+B,IAAI,0BAA0B,CAAC,CAAC;MAC1E,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,OAAOJ,gBAAgB,CAAC,CAAC;AAC3B,CAAC;AAACnC,EAAA,CA5CWD,aAAa;EAAA,QACPH,WAAW,EACXE,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}