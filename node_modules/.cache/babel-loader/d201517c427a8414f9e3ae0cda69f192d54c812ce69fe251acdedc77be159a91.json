{"ast":null,"code":"var _jsxFileName = \"/Users/debjani1413/swipe-clone/frontend/src/components/create.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\nimport Button from './button';\nimport { faAdd, faCirclePlus, faGear } from '@fortawesome/free-solid-svg-icons';\nimport Table from './table';\nimport \"../styles/create.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUploadMessage, setTableData } from '../redux/uploadSlice';\nimport { useSendFile } from '../hooks/useSendFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const fileInputRef = useRef(null);\n  const sendFile = useSendFile();\n  const dispatch = useDispatch();\n  const uploadMessage = useSelector(state => state.upload.uploadMessage);\n  const tableData = useSelector(state => state.upload.tableData);\n\n  // const sendFile = async (file) => {\n  //   const formData = new FormData();  // Create a new FormData object\n  //   formData.append('file', file);\n  //   try {\n  //     // Use fetch to send the file to the backend\n  //     const response = await fetch('http://localhost:5001/upload', {\n  //       method: 'POST',\n  //       body: formData,\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error('Failed to upload file');\n  //     }\n\n  //     // Get the JSON response\n  //     const data = await response.json();\n\n  //     // Set upload success message\n  //     dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n\n  //     // Display the generated summary\n  //       dispatch(setTableData(data));\n  //   } catch (error) {\n  //     console.error('Error uploading file:', error);\n  //     dispatch(setUploadMessage('Failed to upload file'));\n  //   }\n  // }\n\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const onFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n      sendFile(file);\n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000); // Simulate delay for upload\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Create Invoice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"Save as Draft\",\n          className: \"button-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Save and Print\",\n          className: \"button-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Save\",\n          icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this),\n          className: \"button-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-subheader\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"Add new Invoice\",\n        icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 48\n        }, this),\n        className: \"button-primary\",\n        onClick: () => {\n          handleFileUpload();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        } // Hide the input\n        ,\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"Custom Headers\",\n          icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCirclePlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 47\n          }, this),\n          className: \"button-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Settings\",\n          icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faGear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }, this),\n          className: \"button-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-body\",\n      children: [console.log(tableData, \"table data log\"), tableData.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        tabledata: tableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-message\",\n        children: uploadMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"6h65gXYXbfdrCawTQcJ5NMipIo8=\", false, function () {\n  return [useSendFile, useDispatch, useSelector, useSelector];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useRef","FontAwesomeIcon","faArrowRight","Button","faAdd","faCirclePlus","faGear","Table","useDispatch","useSelector","setUploadMessage","setTableData","useSendFile","jsxDEV","_jsxDEV","Create","_s","fileInputRef","sendFile","dispatch","uploadMessage","state","upload","tableData","handleFileUpload","current","click","onFileChange","event","file","target","files","console","log","setTimeout","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","icon","onClick","type","ref","style","display","onChange","length","tabledata","_c","$RefreshReg$"],"sources":["/Users/debjani1413/swipe-clone/frontend/src/components/create.js"],"sourcesContent":["import React, {useRef} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\nimport Button from './button';\nimport { faAdd, faCirclePlus, faGear } from '@fortawesome/free-solid-svg-icons';\nimport Table from './table';\nimport \"../styles/create.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUploadMessage, setTableData } from '../redux/uploadSlice';\nimport { useSendFile } from '../hooks/useSendFile';\n\nconst Create = () => {\n\n  const fileInputRef = useRef(null);\n  const sendFile = useSendFile();\n\nconst dispatch = useDispatch();\n\nconst uploadMessage = useSelector((state) => state.upload.uploadMessage);\nconst tableData = useSelector((state) => state.upload.tableData);\n\n// const sendFile = async (file) => {\n//   const formData = new FormData();  // Create a new FormData object\n//   formData.append('file', file);\n//   try {\n//     // Use fetch to send the file to the backend\n//     const response = await fetch('http://localhost:5001/upload', {\n//       method: 'POST',\n//       body: formData,\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to upload file');\n//     }\n\n//     // Get the JSON response\n//     const data = await response.json();\n\n//     // Set upload success message\n//     dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n\n//     // Display the generated summary\n//       dispatch(setTableData(data));\n//   } catch (error) {\n//     console.error('Error uploading file:', error);\n//     dispatch(setUploadMessage('Failed to upload file'));\n//   }\n// }\n\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const onFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file);\n\n      sendFile(file);\n     \n      setTimeout(() => {\n        dispatch(setUploadMessage(`File \"${file.name}\" uploaded successfully!`));\n      }, 1000); // Simulate delay for upload\n    }\n  };\n\n\n  return (\n    <div className='create'>\n      <div className='create-nav'>\n        <div className='title'>Create Invoice</div>\n        <div className='action-buttons'>\n        <Button text={\"Save as Draft\"} className=\"button-secondary\" />\n        <Button text={\"Save and Print\"} className=\"button-secondary\" />\n        <Button text={\"Save\"} icon={<FontAwesomeIcon icon={faArrowRight} />} className=\"button-primary\"  />\n        </div>\n      </div>\n      <div className='create-subheader'>\n        <Button text={\"Add new Invoice\"} icon={<FontAwesomeIcon icon={faAdd} />} className=\"button-primary\" \n        onClick={()=>{handleFileUpload()}}/>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          style={{ display: 'none' }} // Hide the input\n          onChange={onFileChange}\n        />\n        <div>\n        <Button text={\"Custom Headers\"} icon={<FontAwesomeIcon icon={faCirclePlus} />} className=\"button-primary\" />\n        <Button text={\"Settings\"} icon={<FontAwesomeIcon icon={faGear} />} className=\"button-primary\" />\n        </div>\n      </div>\n      <div className='create-body'>\n        {console.log(tableData, \"table data log\")}\n      {tableData.length > 0 ? (\n          <Table tabledata={tableData} />\n        ) : (\n          <div>No data available</div>\n        )}\n        {uploadMessage && (\n          <div className=\"upload-message\">\n            {uploadMessage}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Create\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}